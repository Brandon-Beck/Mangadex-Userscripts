javascript:"use strict";const isUserscript=void 0!==window.GM_xmlhttpRequest;if(!isUserscript&&!window.location.href.startsWith("https://mangadex.org"))throw alert("Mangadex Post Preview script only works on https://mangadex.org"),Error("Mangadex Post Preview script only works on https://mangadex.org");function loadScript(t){const{head:e}=document,n=document.createElement("script");return n.type="text/javascript",n.src=t,new Promise((t,o)=>{n.onload=t,n.onerror=o,e.appendChild(n)})}const imageBlobs={};function getImageBlob(t){return imageBlobs[t]||(imageBlobs[t]=new Promise((e,n)=>{GM_xmlhttpRequest({method:"GET",url:t,responseType:"blob",onerror:n,ontimeout:n,onload:o=>(o.status>=200&&o.status<=299||304===o.status)&&o.response?(imageBlobs[t]=Promise.resolve(o.response),e(imageBlobs[t])):n(o)})})),imageBlobs[t]}function getImageObjectURL(t){return getImageBlob(t).then(t=>URL.createObjectURL(t))}const imgCache={};function cloneImageCacheEntry(t){const e=t.element.cloneNode(),{loadPromise:n}=t;return{element:e,loadPromise:n}}function getImgForURLViaImg(t){if(void 0!==imgCache[t])return cloneImageCacheEntry(imgCache[t]);const e=document.createElement("img"),n=new Promise((n,o)=>{e.onload=()=>n(e),e.onerror=t=>o(new Error(t.toString())),e.src=t});return imgCache[t]={element:e,loadPromise:n},imgCache[t]}function getImgForURLViaFetch(t){const e=getImageObjectURL(t),n=document.createElement("img"),o=e.then(t=>new Promise((e,o)=>{n.onload=()=>{URL.revokeObjectURL(t),e(n)},n.onerror=e=>{URL.revokeObjectURL(t),o(new Error(e.toString()))},n.src=t}));return{element:n,loadPromise:o}}function getImgForURL(t){return isUserscript?getImgForURLViaFetch(t):getImgForURLViaImg(t)}let generatedBBCodePegParser;function tokensToSimpleAST(t){if(null==t)return[];const e=[{type:"root",content:[],location:[0,0]}],n=[e[0]];let o,a=e[0],i=!1;t.forEach(t=>{if(o&&"linebreak"!==t.type){const e=a.content[a.content.length-1];if("close"===t.type&&"img"===t.tag){if(i){if("openmedia"===e.type){const t={type:"error",content:`[${o.tag}]${o.content}`,location:o.location};a.content.pop(),a.content.push(t)}const n={type:"error",content:`[/${t.tag}]`,location:e.location};a.content.push(n)}else o.explicitlyClosed=!0,o.location[1]=t.location[1];return i=!1,o=void 0,void(a.location[1]=t.location[1])}if("openmedia"===e.type){if(""===e.content&&("link"===t.type||"text"===t.type)&&t.content.match(/^[^ \t\n\r:[\]]+:\/\/[^ \t\n\r[\]]+$/))return e.content=t.content,a.location[1]=t.location[1],void(i=!1);const n={type:"error",content:`[${e.tag}]${e.content}`,location:e.location};a.content.pop(),a.content.push(n)}if(i=!0,"open"===t.type||"prefix"===t.type||"opendata"===t.type||"openmedia"===t.type){const e={type:"error",content:`[${t.tag}]`,location:t.location};a.content.push(e)}else if("close"===t.type){const e={type:"error",content:`[/${t.tag}]`,location:t.location};a.content.push(e)}else if("link"===t.type){const e={type:"error",content:`${t.content}`,location:t.location};a.content.push(e)}else if("error"===t.type||"text"===t.type){const e={type:"error",content:`${t.content}`,location:t.location};a.content.push(e)}a.location[1]=t.location[1]}else if("close"===t.type){let e=Object.values(n).reverse().findIndex(e=>("open"===e.type||"opendata"===e.type||"prefix"===e.type)&&e.tag===t.tag);if(-1!==e){e+=1;for(let o=n.length-e;o<n.length;o++)n[o].location[1]=t.location[1];n.splice(-e,e),a.location[1]=t.location[1],a=n[n.length-1]}else{const e={type:"error",content:`[/${t.tag}]`,location:t.location};a.location[1]=t.location[1],a.content.push(e)}}else if("open"===t.type){const e={type:t.type,tag:t.tag,content:[],location:t.location};a.content.push(e),a.location[1]=t.location[1],a=e,n.push(e)}else if("prefix"===t.type){const e={type:t.type,tag:t.tag,content:[],location:t.location};"prefix"===a.type&&(a.location[1]=t.location[0],n.pop(),a=n[n.length-1]),a.content.push(e),a.location[1]=t.location[1],a=e,n.push(e)}else if("opendata"===t.type){const e={type:t.type,tag:t.tag,content:[],location:t.location};e.data=t.attr,a.content.push(e),a.location[1]=t.location[1],a=e,n.push(e)}else if("openmedia"===t.type){const e={type:t.type,tag:t.tag,content:"",location:t.location,explicitlyClosed:!1};a.content.push(e),a.location[1]=t.location[1],o=e,i=!0}else if("linebreak"===t.type)({location:[,a.location[1]]}=t),a.content.push(t);else if("link"===t.type){a.location[1]=t.location[1];const e=a.content[a.content.length-1];"root"===a.type&&!e||e&&("linebreak"===e.type||"text"===e.type&&e.content.endsWith(" "))?a.content.push(t):a.content.push({type:"error",location:t.location,content:t.content})}else a.location[1]=t.location[1],a.content.push(t)});for(let t=1;t<n.length;t++)n[t].location[1]=a.location[1];if(o){if("openmedia"===a.content[a.content.length-1].type){const t={type:"error",content:`[${o.tag}]${o.content}`,location:o.location};a.content.pop(),a.content.push(t)}const t={type:"error",content:`[/${o.tag}]`,location:o.location};a.content.push(t),o=void 0}return e[0].content}function simpleAstTrim(t){let e=t.findIndex(t=>!("linebreak"===t.type||("text"===t.type||"error"===t.type)&&t.content.match(/^ +$/)));-1===e&&(e=0);let n=t.slice().reverse().findIndex(t=>!("linebreak"===t.type||("text"===t.type||"error"===t.type)&&t.content.match(/^ +$/)));return n=-1===n?0:t.length-n,t.slice(e,n)}function bbcodeTokenizer(){return generatedBBCodePegParser||(generatedBBCodePegParser=peg.generate(String.raw`${"\n"}start = tokens:Expressions? {return tokens}${"\n"}Expressions = tokens:Expression+ {${"\n"}  return tokens${"\n"}}${"\n"}Expression = res:(OpenTag / OpenMediaTag / OpenDataTag / CloseTag / PrefixTag / LineBreak / ImplicitLinkLoose / Text )${"\n"}/*head:Term tail:(_ ("+" / "-") _ Term)* {${"\n"}      return tail.reduce(function(result, element) {${"\n"}        if (element[1] === "+") { return result + element[3]; }${"\n"}        if (element[1] === "-") { return result - element[3]; }${"\n"}      }, head);${"\n"}    }${"\n"}*/${"\n"}Tag = tag:(OpenCloseTag / PrefixTag) {return tag}${"\n"}OpenCloseTag = open:(OpenCloseNormalTag / OpenCloseMediaTag) {${"\n"}    return {type:open.tag, data:open.attr, content}${"\n"}}${"\n"}OpenCloseMediaTag = open:OpenMediaTag content:Expression? close:CloseTag?${"\n"}  &{${"\n"}    let hasClose = close != null${"\n"}    if (false && hasClose && open.tag != close.tag) {${"\n"}      throw new Error(${"\n"}          "Expected [/" + open.tag + "] but [/" + close.tag + "] found."${"\n"}      );${"\n"}    }${"\n"}    return true${"\n"}} {${"\n"}    return {type:open.tag, content: open.content}${"\n"}}${"\n"}OpenCloseNormalTag = open:(OpenTag / OpenDataTag) content:Expression? close:CloseTag?${"\n"}  &{${"\n"}    let hasClose = close != null${"\n"}    if (false && hasClose && open.tag != close.tag) {${"\n"}      throw new Error(${"\n"}          "Expected [/" + open.tag + "] but [/" + close.tag + "] found."${"\n"}      );${"\n"}    }${"\n"}    return true${"\n"}} {${"\n"}    return {type:open.tag, data:open.attr, content}${"\n"}}${"\n"}PrefixTag = "[" tag:PrefixTagList "]" { return {type:"prefix", tag:tag, location:[location().start.offset,location().end.offset]} }${"\n"}${"\n"}// PrefixTag = "[" tag:PrefixTagList "]" content:(!("[/" ListTags "]" / LineBreak ) .)* { return {type:tag,unparsed:content.join('')} }${"\n"}${"\n"}ListTags = "list" / "ul" / "ol" / "li"${"\n"}${"\n"}NormalTagList = "list" / "spoiler" / "center" / "code" / "quote" /  "sub" / "sup" / "left" / "right" / "ol" / "ul" / "h1" / "h2" / "h3" / "h4" / "hr" / "h" / "b" / "s" / "i" / "u"${"\n"}MediaTagList = "img"${"\n"}DataTagList = "url"${"\n"}PrefixTagList = "*"${"\n"}${"\n"}Data${"\n"}  = text:(!"]". Data?) {${"\n"}  /*if(text[2] != null) {${"\n"}    return {type: "data", content:text[1] + text[2].content }${"\n"}  }${"\n"}  return {type: "data", content:text[1] }${"\n"}  */${"\n"}  if(text[2] != null) {${"\n"}    return text[1] + text[2]${"\n"}  }${"\n"}  return text[1]${"\n"}}${"\n"}OpenTag = "[" tag:NormalTagList "]" { return {type:"open", tag:tag, location:[location().start.offset,location().end.offset] } }${"\n"}// content:ExplicitLinkLoose${"\n"}OpenMediaTag = "[" tag:MediaTagList "]" { return {type:"openmedia", tag:tag, location:[location().start.offset,location().end.offset] } }${"\n"}AttrTagProxy = "=" attr:ExplicitLinkLoose {return attr.content}${"\n"}OpenDataTag = "[" tag:DataTagList attr:AttrTagProxy  "]" { return {type:"opendata", tag:tag,attr:attr, location:[location().start.offset,location().end.offset]} }${"\n"}${"\n"}CloseTag = "[/" tag:(DataTagList / MediaTagList / NormalTagList / PrefixTagList ) "]" { return {type:"close", tag:tag, location:[location().start.offset,location().end.offset]} }${"\n"}${"\n"}// FIXME find actual values${"\n"}// Explicit URL Links. Regex is something like [a-zA-Z0-9<LOTS OF SPECIAL CHARS>]://[a-zA-Z0-9]${"\n"}ExplicitLinkAddressStrict${"\n"}  = text:(!([ \t\n\r\[\]]). ExplicitLinkAddressStrict?)${"\n"}   {${"\n"}    return text.join('')${"\n"}  }${"\n"}ExplicitLinkProtoStrict${"\n"}  = text:([a-zA-Z0-9]+)${"\n"}   {${"\n"}    return text.join('')${"\n"}  }${"\n"}ExplicitLinkStrict${"\n"}  = text:(ExplicitLinkProtoStrict "://" ExplicitLinkAddressStrict) !([ \t\n\r])${"\n"}   {${"\n"}    return {type: "link", content:text.join(''), location:[location().start.offset,location().end.offset] }${"\n"}  }${"\n"}ExplicitLinkAddressLoose${"\n"}  = text:(!([ \t\n\r\[\]]). ExplicitLinkAddressLoose?)${"\n"}   {${"\n"}    return text.join('')${"\n"}  }${"\n"}ExplicitLinkProtoLoose${"\n"}  = text:(!([ \t\n\r\[\]\:\/]). ExplicitLinkProtoLoose?)${"\n"}   {${"\n"}    return text.join('')${"\n"}  }${"\n"}ExplicitLinkLoose${"\n"}  = text:(ExplicitLinkProtoLoose "://" ExplicitLinkAddressLoose) !([ \t\n\r])${"\n"}   {${"\n"}    return {type: "link", content:text.join(''), location:[location().start.offset,location().end.offset] }${"\n"}  }${"\n"}// Implicit URL links. At least these are valid. (http|ftp)s?://[a-zA-Z0-9./\-%"':@+]+${"\n"}ImplicitLinkAddressStrict${"\n"}  = text:[a-zA-Z0-9./\-%"':@+]+${"\n"}   {${"\n"}    return text.join('')${"\n"}  }${"\n"}ImplicitLinkStrict${"\n"}  = text:(${"\n"}    ("http" / "ftp") "s"?${"\n"}    "://" ImplicitLinkAddressStrict) !([^ \t\n\r])${"\n"}   {${"\n"}    return {type: "link", content:text.join(''), location:[location().start.offset,location().end.offset] }${"\n"}  }${"\n"}ImplicitLinkAddressLoose${"\n"}  = text:(!([ \t\n\r\[\]]). ImplicitLinkAddressLoose?)${"\n"}   {${"\n"}    return text.join('')${"\n"}  }${"\n"}ImplicitLinkLoose${"\n"}  = text:(${"\n"}    ("http" / "ftp") "s"?${"\n"}    "://" ImplicitLinkAddressLoose) !([^ \t\n\r])${"\n"}   {${"\n"}    return {type: "link", content:text.join(''), location:[location().start.offset,location().end.offset] }${"\n"}  }${"\n"}Text${"\n"}  = text:(!(Tag / CloseTag / LineBreak / ImplicitLinkLoose). Text?) {${"\n"}  if(text[2] != null) {${"\n"}    return {type: "text", content:text[1] + text[2].content, location:[location().start.offset,text[2].location[1]] }${"\n"}  }${"\n"}  return {type: "text", content:text[1], location:[location().start.offset,location().end.offset] }${"\n"}}${"\n"}Word${"\n"}  = text:(!(Tag / CloseTag / LineBreak / " "). Word?) {${"\n"}  if(text[2] != null) {${"\n"}    return {type: "word", content:text[1] + text[2].content, location:[location().start.offset,text[2].location[1]] }${"\n"}  }${"\n"}  return {type: "word", content:text[1], location:[location().start.offset,location().end.offset] }${"\n"}}${"\n"}Space${"\n"}  = text:(" "+) {${"\n"}  return {type: "space", content:text.join(''), location:[location().start.offset,location().end.offset] }${"\n"}}${"\n"}ContiguousText${"\n"}  = text:(!(Tag / CloseTag / LineBreak / _ ). ContiguousText?) {${"\n"}  if(text[2] != null) {${"\n"}    return {type: "text", content:text[1] + text[2].content, location:[location().start.offset,text[2].location[1]] }${"\n"}  }${"\n"}  return {type: "text", content:text[1], location:[location().start.offset,location().end.offset] }${"\n"}}${"\n"}LineBreak${"\n"}  = [\n] {${"\n"}  return {type: "linebreak", location:[location().start.offset,location().end.offset] }${"\n"}}${"\n"}ErrorCatcher${"\n"}  = errTxt:. {return {type: "error", content: errTxt, location:[location().start.offset,location().end.offset]} }${"\n"}${"\n"}_ "whitespace"${"\n"}  = [ \t\n\r]*${"\n"}${"\n"}${"\n"}${"\n"}`))}function astToHtmlAst(t){if(null==t)return[];if("object"!=typeof t)return[];function e(t,e,n){if(t[t.length-1]&&t[t.length-1].element.nodeType===document.TEXT_NODE){let e=t[t.length-1].element.nodeValue+n;return e=(e=e.replace(/^\n[ \t]+/,"\n")).replace(/[ \t]+/g," "),void(t[t.length-1].element.nodeValue=e)}const o=n.replace(/[ \t]+/g," ");t.push({type:"text",element:document.createTextNode(o),location:e.location})}return t.reduce((n,o)=>{if("text"===o.type)e(n,o,o.content);else if("linebreak"===o.type){const t={element:document.createElement("br"),location:o.location,type:"container",contains:[]};n.push(t);const e={element:document.createTextNode("\n"),location:o.location,type:"container",contains:[]};n.push(e)}else if("error"===o.type)e(n,o,o.content);else if("link"===o.type){const t={element:document.createElement("a"),location:o.location,type:"container",contains:[]},e={element:document.createTextNode(o.content),location:o.location,type:"container",contains:[]};n.push(t),t.element.target="_blank",t.element.rel="nofollow",o.content&&(t.element.href=o.content),t.contains.push(e),t.contains.forEach(e=>{t.element.appendChild(e.element)})}else if("openmedia"===o.type){const t=getImgForURL(o.content),e={element:t.element,location:o.location,type:"image",imagePromise:t.loadPromise.then(()=>o.content)};e.element.classList.add("align-bottom"),e.element.style.maxWidth="100%";const a=e.element.attributes.getNamedItem("style");a&&(a.value=`${a.value.trim()} `),n.push(e)}else{if("open"!==o.type&&"prefix"!==o.type&&"opendata"!==o.type)throw new Error({message:"Unknown AST recieved!",child_ast:o,container_ast:t});if("u"===o.tag||"s"===o.tag||"sub"===o.tag||"sup"===o.tag||"ol"===o.tag||"code"===o.tag||"h1"===o.tag||"h2"===o.tag||"h3"===o.tag||"h4"===o.tag||"h5"===o.tag||"h6"===o.tag){const t={element:document.createElement(o.tag),location:o.location,type:"container",contains:[]};n.push(t),t.contains=astToHtmlAst(o.content),t.contains.forEach(e=>{t.element.appendChild(e.element)})}else if("list"===o.tag||"ul"===o.tag){const t={element:document.createElement("ul"),location:o.location,type:"container",contains:[]};n.push(t),t.contains=astToHtmlAst(o.content),t.contains.forEach(e=>{t.element.appendChild(e.element)})}else if("hr"===o.tag){const t={element:document.createElement(o.tag),location:o.location,type:"container",contains:[]};n.push(t),astToHtmlAst(o.content).forEach(t=>{n.push(t)})}else if("b"===o.tag){const t={element:document.createElement("strong"),location:o.location,type:"container",contains:[]};n.push(t),t.contains=astToHtmlAst(o.content),t.contains.forEach(e=>{t.element.appendChild(e.element)})}else if("i"===o.tag){const t={element:document.createElement("em"),location:o.location,type:"container",contains:[]};n.push(t),t.contains=astToHtmlAst(o.content),t.contains.forEach(e=>{t.element.appendChild(e.element)})}else if("h"===o.tag){const t={element:document.createElement("mark"),location:o.location,type:"container",contains:[]};n.push(t),t.contains=astToHtmlAst(o.content),t.contains.forEach(e=>{t.element.appendChild(e.element)})}else if("url"===o.tag){const t={element:document.createElement("a"),location:o.location,type:"container",contains:[]};n.push(t),t.element.target="_blank",o.data&&(t.element.href=o.data),t.contains=astToHtmlAst(o.content),t.contains.forEach(e=>{t.element.appendChild(e.element)})}else if("quote"===o.tag){const t={element:document.createElement("div"),location:o.location,type:"container",contains:[]};n.push(t),t.element.style.width="100%",t.element.style.display="inline-block";const e=t.element.attributes.getNamedItem("style");e?e.value+=" margin: 1em 0;":t.element.style.margin="1em 0",t.element.classList.add("well","well-sm"),t.contains=astToHtmlAst(o.content),t.contains.forEach(e=>{t.element.appendChild(e.element)})}else if("spoiler"===o.tag){const t={element:document.createElement("button"),location:o.location,type:"container",contains:[]};t.element.textContent="Spoiler",t.element.classList.add("btn","btn-sm","btn-warning","btn-spoiler"),t.element.type="button",n.push(t);const e={element:document.createElement("div"),location:o.location,type:"container",contains:[]};n.push(e),e.element.classList.add("spoiler","display-none"),e.contains=astToHtmlAst(o.content),e.contains.forEach(t=>{e.element.appendChild(t.element)})}else if("center"===o.tag||"left"===o.tag||"right"===o.tag){const t={element:document.createElement("div"),location:o.location,type:"container",contains:[]};n.push(t),t.element.classList.add(`text-${o.tag}`),t.contains=astToHtmlAst(o.content),t.contains.forEach(e=>{t.element.appendChild(e.element)})}else if("*"===o.tag){const t={element:document.createElement("li"),location:o.location,type:"container",contains:[]};n.push(t),t.contains=astToHtmlAst(o.content),t.contains.forEach(e=>{t.element.appendChild(e.element)})}else{if(null==o.content)throw Error(`Recieved unknown and unhandeled ast entry '${JSON.stringify(o)}'`);astToHtmlAst(o.content).forEach(t=>{n.push(t)})}}return n},[])}function comparePreviewToPost(t,e){if(t.length!==e.childNodes.length)return console.warn(`Preview children count ${t.length} does not match Post children count ${e.childNodes.length} for post #${e.parentElement.parentElement.id}`),console.warn(t),!1;const n=t.findIndex((t,n)=>!e.childNodes[n].isEqualNode(t.element));return-1===n||(console.warn(`Preview did NOT match post #${e.parentElement.parentElement.id}!`),console.warn("Ast Elm"),console.warn(t[n].element),console.warn("Post Elm"),console.warn(e.childNodes[n]),!1)}function makePreview(t){const e=astToHtmlAst(simpleAstTrim(tokensToSimpleAST(bbcodeTokenizer().parse(t)))),n=document.createElement("div");return n.style.flexGrow="1",e.forEach(t=>n.appendChild(t.element)),n.classList.add("postbody","mb-3","mt-4"),n.style.wordWrap="break-word",n.style.wordBreak="break-word",[n,e]}function createPreviewCallbacks(){const t=document.querySelector("nav.navbar.fixed-top");let e;const n=e=null===t?0:void 0!==t.getBoxQuads?t.getBoxQuads()[0].p3.y:t.getBoundingClientRect().height;let o=Object.values(document.querySelectorAll(".post_edit_form"));(o=(o=o.concat(Object.values(document.querySelectorAll("#post_reply_form")))).concat(Object.values(document.querySelectorAll("#change_profile_form, #start_thread_form")))).forEach(t=>{const e=t.querySelector("textarea");if(!e)return Error("Failed to find text area for forum");let o,a=0,i=1,l=50;const c=1e4,r=!1;if(!t.parentElement)return;t.parentElement.style.alignItems="flex-start",t.parentElement.classList.add("d-flex"),t.parentElement.style.flexDirection="row-reverse",t.style.position="sticky",t.style.top="0px",t.style.width="min-content",t.style.paddingTop=`${n}px`,t.style.marginTop=`-${n}px`,e.style.resize="both",e.style.minWidth="120px",e.style.width="25vw",e.style.paddingLeft="0",e.style.paddingRight="0";let[s,p]=makePreview(e.value);if(t.parentElement.insertBefore(s,t),!isUserscript&&t.classList.contains("post_edit_form")){const e=document.querySelector(`#post_${t.id} .postbody`);e&&comparePreviewToPost(p,e)}const d=t.parentElement.parentElement.firstElementChild;let m;function u(o=e.selectionStart){m&&(m.style.display="none",m=void 0);const a=function t(e,n){const o=e.slice().reverse().find(t=>t.location[0]<=n&&n<=t.location[1]);if(o){if("container"===o.type){!m&&3!==o.element.nodeType&&o.element.classList.contains("spoiler")&&"block"!==o.element.style.display&&((m=o.element).style.display="block");const e=t(o.contains,n);if(e)return e}return o.element}}(p,o);if(a){if(3===a.nodeType){let t;t=void 0!==a.getBoxQuads?a.getBoxQuads()[0].p1.y:a.parentElement.getBoundingClientRect().top,document.scrollingElement.scrollBy(0,t)}else a.scrollIntoView();document.scrollingElement.scrollBy(0,-n);const e=t.getBoundingClientRect();document.scrollingElement.scrollBy(0,e.top)}}function g(){const t=Date.now(),n=i++,[o,d]=makePreview(e.value);$(o).find(".btn-spoiler").click(function(){$(this).next(".spoiler").toggle()});const m=[];Object.values(o.querySelectorAll("img")).forEach(t=>{m.push(new Promise(e=>{t.addEventListener("load",e),t.addEventListener("error",e),t.complete&&e()}))}),Promise.all(m).then(()=>{const e=Date.now()-t;!r&&e>c||(l=(l+e)/2),n<a?o.remove():(a=n,s.parentElement.insertBefore(o,s),s.remove(),s=o,p=d,u())})}function f(){clearTimeout(o),o=setTimeout(g,l)}d!==t.parentElement&&("img"===d.firstChild.nodeName.toLowerCase()?(d.firstChild.remove(),d.appendChild(t),t.parentElement.classList.remove("p-3"),t.parentElement.classList.add("pb-3"),t.parentElement.parentElement.classList.add("post")):(t.classList.add("pr-3"),"change_profile_form"===t.id&&(e.parentElement.style.flexBasis="100%",e.parentElement.style.maxWidth="100%"))),e.addEventListener("selectionchange",()=>{a===i-1&&null!=p[p.length-1]&&p[p.length-1].location[1]===e.value.length&&u()}),Object.values(t.querySelectorAll("button")).forEach(t=>{t.addEventListener("click",f)}),e.oninput=f})}isUserscript?createPreviewCallbacks():loadScript("https://gitcdn.xyz/cdn/pegjs/pegjs/0b102d29a86254a50275b900706098aeca349740/website/vendor/pegjs/peg.js").then(()=>{createPreviewCallbacks()});